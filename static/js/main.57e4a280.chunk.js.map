{"version":3,"sources":["services/HackerNewsService.ts","services/BaseService.ts","utilities/DateHelper.ts","components/CommentCard/CommentCard.tsx","components/CommentCard/CommentCard.hooks.ts","components/StoryCard/StoryCard.tsx","components/StoryCard/StoryCard.hooks.ts","components/Content/Content.tsx","components/Content/Content.hooks.ts","components/Toolbar/Toolbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HackerNewsService","baseUrl","getTopStories","get","getItemById","id","url","console","log","fetch","then","response","json","res","enhanceTimeString","date","diffInHours","Date","getTime","toLocaleDateString","fixed","Math","round","CommentCard","props","comment","useState","time","commentTime","useCommentCard","className","by","dangerouslySetInnerHTML","__html","text","StoryCardComponent","storyId","index","story","setStory","comments","setComments","showComments","setShowComments","storyUrlHostname","setStoryUrlHostname","storyTime","setStoryTime","useEffect","URL","hostname","catch","err","loadComments","useCallback","a","kids","length","service","results","slice","s","push","toggleComments","useStoryCard","title","href","target","rel","score","descendants","onClick","map","c","Content","stories","setStories","useContent","idx","Toolbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57e4a280.chunk.js","sourcesContent":["import { Item } from '../models/Item';\nimport { BaseService } from './BaseService';\n\nexport class HackerNewsService extends BaseService {\n    private baseUrl = 'https://hacker-news.firebaseio.com/v0';\n\n    public getTopStories = (): Promise<number[]> => {\n        return this.get(`${this.baseUrl}/topstories.json`);\n    }\n\n    public getItemById = (id: number): Promise<Item> => {\n        return this.get(`${this.baseUrl}/item/${id}.json`);\n    }\n\n}","export abstract class BaseService {\n    protected async get<T>(url: string): Promise<T> {\n        console.log('get: ' + url);\n        const res = await fetch(url)\n            .then(response => response.json());\n        return res;\n    }\n}","export const enhanceTimeString = (date: Date): string => {\n    const now = new Date();\n    const difference = now.getTime() - date.getTime();\n    const diffInHours = difference / 1000 / 60 / 60;\n    if (diffInHours > 24) {\n        return date.toLocaleDateString();\n    }\n    else if (diffInHours > 1) {\n        const fixed = Math.round(diffInHours);\n        return `${fixed} hour${fixed > 2 ? 's' : ''} ago`;\n    }\n    else {\n        const fixed = Math.round(diffInHours * 60);\n        return `${fixed} minute${fixed > 2 ? 's' : ''} ago`;\n    }\n}","import React from 'react';\nimport { CommentCardProps } from './CommentCard.props';\nimport { useCommentCard } from './CommentCard.hooks';\n\nimport './Comment.css';\n\nexport const CommentCard = (props: CommentCardProps) => {\n    const { comment, commentTime } = useCommentCard(props);\n\n    if (!comment) {\n        return null;\n    }\n\n    return (\n        <div className=\"comment\">\n            <span className=\"story-subheadline\"><b>{comment.by}</b> {commentTime}</span>\n            <br/>\n            <span dangerouslySetInnerHTML={{ __html: comment?.text ?? \"\" }} />\n        </div>\n    );\n};\n","import { useState } from 'react';\nimport { CommentCardProps } from './CommentCard.props';\nimport { enhanceTimeString } from '../../utilities/DateHelper';\n\nexport const useCommentCard = ({ comment }: CommentCardProps) => {\n    const [commentTime] = useState(enhanceTimeString(new Date(comment.time * 1000)));\n\n    return { comment, commentTime };\n};","import React from 'react';\nimport { StoryCardProps } from './StoryCard.props';\nimport { useStoryCard } from './StoryCard.hooks';\nimport { CommentCard } from '../CommentCard/CommentCard';\n\nimport './StoryCard.css';\n\nexport const StoryCardComponent = (props: StoryCardProps) => {\n    const { story, index, comments, showComments, storyUrlHostname, storyTime, toggleComments } = useStoryCard(props);\n\n    if (!story) {\n        return null;\n    }\n\n    return (\n        <div className=\"story-card\">\n            <span className=\"story-title\">{index}. {story.title}</span> (<a href={story.url} target=\"_blank\" rel=\"noreferrer\">{storyUrlHostname}</a>)\n            <br/>\n            <span className=\"story-subheadline\">{story.score} points by <b>{story.by}</b> {storyTime} | <b>{story.descendants ?? 0}</b> comments</span>\n            {!!story.descendants && <button onClick={toggleComments}>{showComments ? \"Hide\" : \"Show\"}</button>}\n            <br/>\n            {showComments && comments.map((c) => <CommentCard key={`comment_${c.id}`} comment={c} />)}\n        </div>\n    );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Item } from '../../models/Item';\nimport { HackerNewsService } from '../../services/HackerNewsService';\nimport { enhanceTimeString } from '../../utilities/DateHelper';\nimport { StoryCardProps } from './StoryCard.props';\n\nexport const useStoryCard = ({ storyId, index }: StoryCardProps) => {\n    const [story, setStory] = useState<Item | undefined>();\n    const [comments, setComments] = useState<Item[]>([]);\n    const [showComments, setShowComments] = useState(false);\n    const [storyUrlHostname, setStoryUrlHostname] = useState('');\n    const [storyTime, setStoryTime] = useState<string>('');\n\n    useEffect(() => {\n        const service = new HackerNewsService()\n        service.getItemById(storyId)\n            .then((res) => {\n                setStory(res);\n                // setCommentIds((res.kids ?? []).slice(0, 20));\n                setStoryUrlHostname(new URL(res.url).hostname);\n                setStoryTime(enhanceTimeString(new Date(res.time * 1000)));\n            })\n            .catch((err) => {\n                // error\n            });\n    }, [storyId]);\n\n    const loadComments = useCallback(async () => {\n        if (!story?.kids || comments.length) {\n            return;\n        }\n        const service = new HackerNewsService()\n        try {\n            const results: Item[] = [];\n            for (const s of story.kids.slice(0, 20)) {\n                const res = await service.getItemById(s);\n                results.push(res);\n            }\n            setComments(results);\n        }\n        catch (err) {\n            // error\n        }\n    }, [story?.kids, comments]);\n\n    const toggleComments = useCallback(() => {\n        setShowComments(!showComments);\n        loadComments();\n    }, [showComments, loadComments]);\n\n    return { story, index, comments, showComments, storyUrlHostname, storyTime, toggleComments };\n};","import React from 'react';\nimport { StoryCardComponent } from '../StoryCard/StoryCard';\nimport { useContent } from './Content.hooks';\nimport { ContentContextProvider } from '../../providers/ContentProvider';\n\nimport './Content.css';\n\nexport const Content = () => {\n    const { stories } = useContent();\n    return (\n        <div className=\"content-container\">\n            <div className=\"content\">\n                {/* <ContentContextProvider> */}\n                    {stories.map((s, idx) => <StoryCardComponent key={`story_${s}`} storyId={s} index={idx + 1} />)}\n                {/* </ContentContextProvider> */}\n            </div>\n        </div>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { HackerNewsService } from '../../services/HackerNewsService';\n\nexport const useContent = () => {\n    const [stories, setStories] = useState<number[]>([]);\n\n    useEffect(() => {\n        const service = new HackerNewsService();\n        service.getTopStories()\n            .then((res) => {\n                setStories(res.slice(0, 10));\n            })\n            .catch((err) => {\n                // error\n            });\n    }, []);\n\n    return { stories };\n};","import React from 'react';\n\nimport './Toolbar.css';\n\nexport const Toolbar = () => {\n    return (\n        <header className=\"toolbar\">\n            <h1>Hacker News</h1>\n        </header>\n    );\n};\n","import React from 'react';\nimport { Content } from './components/Content/Content';\nimport { Toolbar } from './components/Toolbar/Toolbar';\n\nconst App = () => {\n  return (\n    <>\n      <Toolbar />\n      <Content />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}